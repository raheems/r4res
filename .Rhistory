str(matrix(c(1, 2, 3, 4), nrow = 2))
a = list(
series = 1:10,
series2 = c(1, 10),
tf = c(T, F, F)
)
str(a)
attributes(a)
names(a)
dim(a)
row.names(df)
class(df)
# an object
x = c(1, 2, 3)
print(x)
typeof(x)
# another object
y = 1:3
print(y)
typeof(y)
# character vector
z = c('Male', 'Female')
print(z)
typeof(z)
str(x)
str(y)
str(z)
attributes(x) # returns NULL
my_mat = matrix(1:10, nrow = 2, ncol = 5)
typeof(my_mat)
str(my_mat)
attributes(my_mat)
my_list = list(
serial = 1:5,
age = c(10, 11, 20, 30, 32),
sex = c('M', 'F', 'F', 'M', 'M')
)
str(my_list)
attributes(my_list)
names(my_list)
dim(my_list)
my_list = list(
serial = 1:5,
age = c(10, 11, 20, 30, 32),
sex = c('M', 'F', 'F', 'M', 'M')
)
df = data.frame(my_list)
str(df)
attributes(df)
x = c(1, 2, 3)
my_list = list(
serial = 1:5,
age = c(10, 11, 20, 30, 32),
sex = c('M', 'F', 'F', 'M', 'M')
)
df = data.frame(my_list)
df
typeof(df)
str(df)
attributes(df)
names(df)
row.names(df)
class(df)
row.names(df)
row.names(df)==1
row.names(df)=="2"
typeof(row.names(df))
?colnames
rownames(df)
colnames(df)
?colnames
?names
?colnames
x
names(x)
my_vec = c(10.1, 2.2, 32.3, 5.4)
my_vec[1]
my_vec[2]
# extract the first and third element
my_vec[c(1, 3)]
my_vec[TRUE]
my_vec[c(TRUE)]
my_vec[c(TRUE, FALSE)]
my_vec[c(FALSE, FALSE)]
my_vec[c(TRUE, FALSE)]
my_vec
my_vec[c(TRUE, FALSE)]
# keep first element by exclude the second
my_vec[c(1, -2)]
my_vec = c(10.1, 2.2, 32.3, 5.4)
my_vec[1]
my_vec[2]
# extract the first and third element
my_vec[c(1, 3)]
# exclude the second element
my_vec[-c(2)]
# keep first element by exclude the second
my_vec[c(1, -2)]
my_vec >1
my_vec > 9
my_vec[my_vec > 9]
typeof(my_vec>9)
my_vec[1, 2]
?matrix
df$sex
my_list['age']
my_vec = c(10.1, 2.2, 32.3, 5.4)
my_vec[1]
my_vec[2]
# extract the first and third element
my_vec[c(1, 3)] # subsetting with integer position
# exclude the second element
my_vec[-c(2)]
my_vec > 9
# check the type of the resulting vector
typeof(my_vec > 9)
my_vec[my_vec > 9] # subsetting with logical vector
my_mat = matrix(1:50, nrow = 10, ncol = 5)
my_mat
# extract the first element
my_mat[1,1]
# subset the first row
my_mat[1, ]
# subset rows 1, 2, and 4 and return all columns
my_mat[c(1, 2, 4), ]
# subset the second columns and keep values in all rows
my_mat[ , 2]
x = c(1, 2, 3)
my_list = list(
serial = 1:5,
age = c(10, 11, 20, 30, 32),
sex = c('M', 'F', 'F', 'M', 'M')
)
df = data.frame(my_list)
df
typeof(df)
str(df)
df$age
df$serial
df$sex
df$sex
df$sex == 'M'
# subset the males
df[df$sex == 'M', ]
df[df$sex == 'M', c('age', 'sex')]
df[df$sex == 'M', c(2, 3)]
# prints the list
my_list
my_list$age
# extracts the first item of the list
my_list[1]
# extracts the elements of the first item of the list
my_list[[1]]
my_list['age']
