# extracts the elements of the first item of the list
my_list[[1]]
my_list['age']
my_list[['age']][2]
typeof(df)
my_vec2 = my_vec
my_vec2
my_vec2 = my_vec
# replace the value in the second position
my_vec2[2] = 20.2
my_vec
my_vec2 = my_vec
# replace the value in the second position
my_vec2[2] = 20.2
my_vec
my_vec2 = my_vec
# replace the value in the second position
my_vec2[2] = 20.2
my_vec2
my_vec2 = my_vec
# replace the value in the second position
my_vec2[2] = 20.2
my_vec
my_vec2
my_mat2 = my_mat
my_mat2[1, 1] = 10
my_mat2
my_list2 = my_list
my_list2
my_list2 = my_list
new_age = age + 10
my_list2 = my_list
new_age = my_list$age + 10
my_list2$age = new_age
my_list
my_list2
my_list$new_age = my_list$age + 20
my_list
%*%
?%*%
mat_a = matrix(c(10, 20, 30, 40), nrow = 2)
mat_b = matrix(c(11, 21, 31, 61), nrow = 2)
mat_a * mat_b
mat_a = matrix(c(10, 20, 30, 40), nrow = 2)
mat_b = matrix(c(1, 2, 3, 4), nrow = 2)
# Element wise multiplication
mat_a * mat_b
mat_a = matrix(c(10, 20, 30, 40), nrow = 2)
mat_b = matrix(c(1, 2, 3, 4), nrow = 2)
mat_a
mat_b
# Element wise multiplication
mat_a * mat_b
mat_a = matrix(c(10, 20, 30, 40), nrow = 2)
mat_b = matrix(c(1, 2, 3, 4), nrow = 2)
mat_a
mat_b
# Element wise multiplication
mat_a * mat_b
# True matrix multipliation
mat_a %*% mat_b
10 -> yy
yy
x = 5
x = x == 3
x
x = 3
x == 3
x = 3
x == 3
!(x == 3)
x = 3
x == 3 # its TRUE
!(x == 3) # when negated, it should be false
x = 3
x == 3 # its TRUE
!(x == 3) # when negated, it should be false
x != 3 # equivalent to the previous one
x = c(10, 20, 30)
y = c(10, 21, 40)
x & y
x = c(10, 20, 30)
y = c(10, 21, 40)
x & y
x = c(10, 20, 30)
y = c(10, 21, 40)
x == y
x = c(10, 20, 30)
y = c(10, 21, 40)
x == 10 & y == 10
x = c(10, 20, 30)
y = c(10, 21, 40)
(x == 10) & (y == 10)
x = c(10, 20, 30)
y = c(10, 21, 40)
(x == 10) & (y == 10) # only first element satisfies both conditions
(x == 10) & (y == 20)
x = c(10, 20, 30)
y = c(11, 20, 40)
(x == 10) & (y == 10) # only first element satisfies both conditions
(x == 20) & (y == 20) # both conditions are not met
x && y
x && y
x = c(10, 20, 30)
y = c(11, 20, 40)
x && y
x = c(10, 20, 30)
y = c(11, 20, 40)
if length(x) > 0 & y[1]==11 {
x = c(10, 20, 30)
y = c(11, 20, 40)
if (length(x) > 0) & y[1]==11 {
x = c(10, 20, 30)
y = c(11, 20, 40)
if (length(x) > 0 & y[1]==11) {
print("yes")
}
x = c(10, 20, 30)
y = c(11, 20, 40)
if (length(x) > 0 & y[1]==10) {
print("yes")
}
x = c(10, 20, 30)
y = c(11, 20, 40)
if (length(x) > 0 & y[1]==10) {
print("yes")
}
x = c(10, 20, 30)
y = c(11, 20, 40)
if (length(x) > 0 && y[1]==10) {
print("yes")
}
x = c(10, 20, 30)
y = c(11, 20, 40)
if (length(x) > 0 & y[1]==10) {
print("yes")
}
x = c(10, 20, 30)
y = c(11, 20, 40)
if (length(x) > 0 & y[1]==10) {
print("yes") else{
x = c(10, 20, 30)
y = c(11, 20, 40)
if (length(x) > 0 & y[1]==10) {
print("yes")
} else{
print("No")
}
x = c(10, 20, 30)
y = c(11, 20, 40)
if (length(x) > 0 && y[1]==10) {
print("yes")
} else{
print("No")
}
x = c(10, 20, 30)
y = c(11, 20, 40)
if (length(x) > 0 && y %in% c(11, 20, 40)) {
print("yes")
} else{
print("No")
}
x = c(10, 20, 30)
y = 10
if (length(x) > 0 && y %in% c(11, 20, 40)) {
print("yes")
} else{
print("No")
}
x = c(10, 20, 30)
y = 10
if (length(x) > 0 && y %in% c(10, 20, 40)) {
print("yes")
} else{
print("No")
}
if (length(x) > 0 & y %in% c(10, 20, 40)) {
print("yes")
} else{
print("No")
}
if (length(x) > 0 & y %in% c(20, 10, 40)) {
print("yes")
} else{
print("No")
}
x = c(10, 20, 30)
y = 10
if (length(x) > 0 && y %in% c(29, 10, 40)) {
print("yes")
} else{
print("No")
}
length(x) > 0 & y %in% c(20, 10, 40))
length(x) > 0 & y %in% c(20, 10, 40)
length(x) > 0 && y %in% c(20, 10, 40)
df
df
df$age == 10 & df$sex == 'M'
x = c(10, 20, 30)
y = 10
if (length(x) > 0 && y %in% c(29, 10, 40)) {
print("yes")
} else{
print("No")
}
df
df$age == 10 & df$sex == 'M'
x = 5
x = x == 3 # checking if the value of x is 3
x
x = 5
x <- x == 3 # checking if the value of x is 3
x
mat_a = matrix(c(10, 20, 30, 40), nrow = 2)
mat_b = matrix(c(1, 2, 3, 4), nrow = 2)
mat_a
mat_b
# Element wise multiplication
mat_a * mat_b
# True matrix multiplication
mat_a %*% mat_b
x = 3
x == 3 # its TRUE
!(x == 3) # when negated, it should be false
x != 3 # equivalent to the previous one
x = c(10, 20, 30)
y = 10
if (length(x) > 0 && y %in% c(29, 10, 40)) {
print("yes")
} else{
print("No")
}
df$age == 10 & df$sex == 'M'
df
df$age == 10 & df$sex == 'M'
?&&
mtcars
mtcars %>% glimpse()
?mpg
??mpg
?tidyverse::mpg
?ggpllt2::mpg
?ggplot2::mpg
??mpg
?ggplot2::mpg
table(mpg$drv)
mpg %>%
select(drv) %>%
table()
library(tidyverse)
mpg %>% glimpse()
?ggplot2::mpg
mpg %>% glimpse()
mpg %>%
select(drv) %>%
table()
mpg %>%
# select(drv) %>%
table()
mpg %>%
select(drv) %>%
table()
mpg %>%
filter(drv == f)
mpg %>%
filter(drv == 'f')
table(mpg$cyl)
mpg %>%
filter(drv == 'f', cyl == 5)
mpg %>%
filter(drv == 'f', cyl == 5.5)
mpg %>%
filter(drv == 'f', cyl == 5.0)
mpg %>%
filter(drv == 'f', cyl == 5)
mpg %>%
filter(drv == 'f', cyl == '5')
mpg %>%
filter(drv == 'f', cyl == 5)
mpg %>%
filter(drv == 'f' | cyl == 5)
mpg %>%
filter(drv == 'f' | year == c(1999, 2000) )
mpg %>%
filter(year == c(1999, 2000))
mpg %>%
filter(year == c(1999, 2000)) %>%
select(year) %>%
table()
table(mpg$year)
mpg %>%
filter(city == c(24, 20)) %>%
select(city) %>%
table()
mpg %>%
filter(cty == c(24, 20)) %>%
select(cty) %>%
table()
mpg
library(tidyverse)
mpg %>% glimpse()
?ggplot2::mpg
mpg %>% glimpse()
table(mpg$drv)
mpg %>%
select(drv) %>%
table()
mpg %>%
filter(drv == 'f')
table(mpg$cyl)
mpg %>%
filter(drv == 'f', cyl == 5)
mpg %>%
filter(drv == 'f' | cyl == 5)
mpg %>%
filter(cty == c(24, 20)) %>%
select(cty) %>%
table()
mpg %>%
which(cyl == 6)
mpg %>%
slice(
which(cyl == 6)
)
which(mpg$cyl == 4)
which(mpg$cyl == 5)
?slice
mpg %>% slice_head()
mpg %>% slice_tail()
mpg %>% slice_min()
mpg %>% slice_min(order_by = cyl)
mpg %>% slice_min(order_by = cty)
mpg %>% slice_max(order_by = cty)
mpg %>% slice_min(order_by = cty)
mpg %>% slice_sample(2)
mpg %>% slice_sample()
mpg %>% slice_sample(n = 10)
mpg %>% slice_sample(10)
mpg %>% slice_sample(n = 10)
?n()
?tally
mpg %>% n()
mpg %>% summarize(n())
mpg %>%
filter(drv == 'f' | cty == c(24, 20)) %>% # OR operator '|' is used
```
library(tidyverse)
mpg %>% glimpse()
?ggplot2::mpg
mpg %>% glimpse()
table(mpg$drv)
mpg %>%
select(drv) %>%
table()
mpg %>%
filter(drv == 'f')
table(mpg$cyl)
mpg %>%
filter(drv == 'f', cyl == 5)
mpg %>%
filter(drv == 'f' | cyl == 5)
mpg %>%
filter(cty == c(24, 20)) %>%
select(cty) %>%
table()
mpg %>%
filter(drv == 'f' | cty == c(24, 20)) %>% # OR operator '|' is used
mpg %>%
filter(drv == 'f' | cty == c(24, 20))  # OR operator '|' is used
mpg %>%
filter(drv == 'f' | cty == c(24, 20))  # OR operator '|' is used
mpg %>%
filter(drv == 'f' | cty == c(24, 20))
mpg %>%
filter(drv == 'f' | cty == c(24, 20))
mpg %>%
filter(drv == 'f' | cty == c(24, 20))  # OR operator '|' is used
mpg %>%
filter(drv == 'f' | cty == c(24, 20)) %>%
select(drv, cty) %>%
table()
mpg %>%
filter(drv == 'f' | cty == c(24, 20)) %>%
select(drv) %>%
table()
mpg %>%
filter(drv == 'f' | cty == c(24, 20)) %>%
select(cty) %>%
table() # got some 4-wheel and mostly front-wheel drive vehicles
mpg %>%
select(model, make, drv) %>%
glimpse()
library(tidyverse)
mpg %>% glimpse()
?ggplot2::mpg
mpg %>% glimpse()
mpg %>%
select(model, make, drv) %>%
glimpse()
mpg %>%
select(model, year, drv) %>%
glimpse()
labor = read_xlsx("data/labor-market-for-recent-college-grads-original.xlsx")
library(readxl)
labor = read_xlsx("data/labor-market-for-recent-college-grads-original.xlsx")
View(labor)
labor
library(readxl)
labor = read_xlsx("data/labor-market-for-recent-college-grads-original.xlsx", sheet = 't1_majors')
labor
labor %>% glimpse()
View(labor)
?read_xlsx
labor = read_xlsx("data/labor-market-for-recent-college-grads-original.xlsx", sheet = 't1_majors', range = 'a14:f88')
labor %>% glimpse()
View(labor)
labor = read_xlsx("data/labor-market-for-recent-college-grads-original.xlsx", sheet = 't1_majors', range = 'a14:f88',
name_repair = "universal")
labor = read_xlsx("data/labor-market-for-recent-college-grads-original.xlsx", sheet = 't1_majors', range = 'a14:f88',
.name_repair = "universal")
labor %>% glimpse()
labor = read_xlsx("data/labor-market-for-recent-college-grads-original.xlsx", sheet = 't1_majors', range = 'a14:f88')
labor %>% glimpse()
labor %>%
rename(
unem_rate = Unemployment.Rate
) %>%
glimpse()
labor %>%
rename(
unem_rate = `Unemployment.Rate`
) %>%
glimpse()
labor = read_xlsx("data/labor-market-for-recent-college-grads-original.xlsx", sheet = 't1_majors', range = 'a14:f88',
.name_repair = "universal")
labor %>% glimpse()
labor %>%
rename(
unem_rate = `Unemployment.Rate`
) %>%
glimpse()
labor %>%
rename(
unem_rate = Unemployment.Rate
) %>%
glimpse()
labor %>%
rename(
unem_rate = Unemployment.Rate,
enderem_rate = Underemployment.Rate
) %>%
glimpse()
labor %>%
rename(
unem_rate = Unemployment.Rate,
underem_rate = Underemployment.Rate
) %>%
glimpse()
library(gtsummary)
labor
mpg %>% glimpse()
mpg %>%
select(cyl, cty) %>%
tbl_summary()
install.packages("haven")
library(haven)
library(haven)
df_sas = read_sas('data/scfp2019')
?read_sas
library(haven)
df_sas = read_sas('data/scfp2019')
df_sas = read_sas('data/scfp2019.sas7bdat')
?read_xpt
df_sas = read_xpt('data/scfp2019.sas7bdat')
df_sas = read_xpt('data/scfp2019')
df_sas = read_xpt('data/scfp2019.sas7bdat')
df_sas = read_xpt('data/gdp.sas7bdat')
df_sas = read_sas('data/gdp.sas7bdat')
df_sas
df_sas = read_sas('data/profits.sas7bdat')
df_sas
df_stata = read_dta('data/scfp2019.dta)
df_stata = read_dta('data/scfp2019.dta')
df_stata = read_dta('data/scfp2019.dta')
df_stata
View(df_stata)
names(df_stata)
df_spss_2016 = read_sav('data/spss/HLTH1025_2016.xlsx')
library(haven)
df_spss_2016 = read_sav('data/spss/HLTH1025_2016.xlsx')
df_spss_2016 = read_sav('data/spss/HLTH1025_2016.sav')
df_spss_2016 %>% glimpse()
View(df_spss_2016)
df_stata = read_dta('data/scfp2019.dta')
df_stata
?write.csv
# https://www.newyorkfed.org/research/college-labor-market/index#/outcomes-by-major
labormarket = read_csv("data/labor-market-recent-college-grads.csv")
library(tidyverse)
# https://www.newyorkfed.org/research/college-labor-market/index#/outcomes-by-major
labormarket = read_csv("data/labor-market-recent-college-grads.csv")
labormarket %>% glimpse()
labormarket
labormarket %>%
select(Majorm `Unemployment Rate`) %>%
labormarket %>%
select(Major, `Unemployment Rate`) %>%
write_csv('output_test.csv')
labormarket %>%
select(Major, `Unemployment Rate`) %>%
write_csv('data/tmp_output_test.csv')
